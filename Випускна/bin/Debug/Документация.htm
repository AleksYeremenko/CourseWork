<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
h1
	{mso-style-link:"Заголовок 1 Знак";
	margin-right:0cm;
	margin-left:0cm;
	font-size:24.0pt;
	font-family:"Times New Roman",serif;
	font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	font-size:9.0pt;
	font-family:"Calibri",sans-serif;
	color:#44546A;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-link:"Основний текст Знак";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:5.1pt;
	text-align:justify;
	text-indent:35.95pt;
	text-autospace:none;
	font-size:14.0pt;
	font-family:"Times New Roman",serif;}
a:link, span.MsoHyperlink
	{color:#0563C1;
	text-decoration:underline;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:36.0pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:36.0pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	line-height:107%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Calibri Light",sans-serif;
	color:#2F5496;}
p.1, li.1, div.1
	{mso-style-name:Стиль1;
	mso-style-link:"Стиль1 Знак";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	text-align:center;
	line-height:107%;
	font-size:13.5pt;
	font-family:"Calibri",sans-serif;
	color:black;}
span.10
	{mso-style-name:"Стиль1 Знак";
	mso-style-link:Стиль1;
	color:black;}
span.a
	{mso-style-name:"Основний текст Знак";
	mso-style-link:"Основний текст";
	font-family:"Times New Roman",serif;}
span.11
	{mso-style-name:"Заголовок 1 Знак";
	mso-style-link:"Заголовок 1";
	font-family:"Times New Roman",serif;
	font-weight:bold;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-US link="#0563C1" vlink="#954F72" style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal align=center style='margin-bottom:0cm;text-align:center'><span
lang=RU style='font-size:13.5pt;font-family:"Times New Roman",serif;color:black'>Комунальний
заклад освіти</span></p>

<p class=MsoNormal align=center style='margin-bottom:0cm;text-align:center'><span
lang=RU style='font-size:13.5pt;font-family:"Times New Roman",serif;color:black'>«Дніпровський
ліцей інформаційних технологій</span></p>

<p class=MsoNormal align=center style='margin-bottom:0cm;text-align:center'><span
lang=RU style='font-size:13.5pt;font-family:"Times New Roman",serif;color:black'>при
Дніпровському національному університеті</span></p>

<p class=MsoNormal align=center style='margin-bottom:0cm;text-align:center'><span
lang=RU style='font-size:13.5pt;font-family:"Times New Roman",serif;color:black'>імені
Олеся Гончара»</span></p>

<p class=1><span lang=RU style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>Випускна робота</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>на тему</span><span lang=RU style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'>:</span></p>

<p class=1><a name="_Hlk64238518"><b><span lang=UK style='font-size:20.0pt;
line-height:107%;font-family:"Times New Roman",serif'>Пошук найбільш безпечного
шляху</span></b></a><b><span lang=RU style='font-size:20.0pt;line-height:107%;
font-family:"Times New Roman",serif'> н</span></b><b><span lang=UK
style='font-size:20.0pt;line-height:107%;font-family:"Times New Roman",serif'>а
заражений ділянці</span></b></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 align=left style='text-align:left'><b><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></b></p>

<p class=MsoBodyText align=right style='margin-top:12.5pt;margin-right:3.4pt;
margin-bottom:0cm;margin-left:0cm;margin-bottom:.0001pt;text-align:right;
text-indent:0cm'><span lang=UK>Виконав</span><span lang=RU>:</span></p>

<p class=MsoBodyText align=right style='margin-top:12.5pt;margin-right:3.4pt;
margin-bottom:0cm;margin-left:0cm;margin-bottom:.0001pt;text-align:right;
text-indent:0cm'><span lang=UK>ліцеїст 11-В-</span>I <span lang=UK>класу</span></p>

<p class=MsoBodyText align=right style='margin-top:12.5pt;margin-right:3.4pt;
margin-bottom:0cm;margin-left:0cm;margin-bottom:.0001pt;text-align:right;
text-indent:0cm'><span lang=UK>Єременко </span><span lang=UK> </span><span
lang=UK>Олександр Сергійович</span></p>

<p class=MsoBodyText align=right style='margin-top:12.5pt;margin-right:3.4pt;
margin-bottom:0cm;margin-left:0cm;margin-bottom:.0001pt;text-align:right;
text-indent:0cm'><span lang=RU>&nbsp;</span></p>

<p class=MsoBodyText align=right style='margin-top:0cm;margin-right:61.15pt;
margin-bottom:0cm;margin-left:144.05pt;margin-bottom:.0001pt;text-align:right;
line-height:100%'><span lang=UK>Керівник</span><span lang=RU>:</span></p>

<p class=MsoBodyText align=right style='margin-top:0cm;margin-right:61.15pt;
margin-bottom:0cm;margin-left:72.05pt;margin-bottom:.0001pt;text-align:right;
line-height:100%'><span lang=UK>Ентін Йосиф Абрамович</span></p>

<p class=MsoBodyText align=right style='margin-left:0cm;text-align:right;
text-indent:0cm'><span lang=RU>&nbsp;</span></p>

<p class=MsoBodyText align=right style='margin-left:0cm;text-align:right;
text-indent:0cm'><span lang=RU>&nbsp;</span></p>

<p class=MsoBodyText align=right style='margin-left:0cm;text-align:right;
text-indent:0cm'><span lang=RU>&nbsp;</span></p>

<p class=MsoBodyText align=right style='margin-left:0cm;text-align:right;
text-indent:0cm'><span lang=RU>&nbsp;</span></p>

<p class=MsoBodyText align=right style='margin-left:0cm;text-align:right;
text-indent:0cm'><span lang=RU>&nbsp;</span></p>

<p class=1 align=right style='text-align:right'><b><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></b></p>

<p class=1><b><span lang=UK style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Дніпро 2021</span></b></p>

<p class=1 align=left style='text-align:left'><b><span lang=UK
style='font-size:18.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></b></p>

<p class=MsoTocHeading><span lang=UK>Зміст</span></p>

<p class=MsoToc1><a href="#_Toc90012301"><span lang=UK>Вступ</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></p>

<p class=MsoToc1><a href="#_Toc90012302"><span lang=RU>Теоретична частина</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></p>

<p class=MsoToc1><a href="#_Toc90012303"><span lang=RU>Головна частина</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>12</span></a></p>

<p class=MsoToc1><a href="#_Toc90012304"><span lang=RU>Крупноблочна блок-схема</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></p>

<p class=MsoToc1><a href="#_Toc90012305">Програмно-апаратні вимоги<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>21</span></a></p>

<p class=MsoToc1><a href="#_Toc90012306"><span lang=UK>Перелік використаних
програмних проектів</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>22</span></a></p>

<p class=MsoToc1><a href="#_Toc90012307"><span lang=RU>Посібник користувача</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>23</span></a></p>

<p class=MsoToc1><a href="#_Toc90012308"><span lang=UK>Висновки</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>24</span></a></p>

<p class=MsoToc1><a href="#_Toc90012310"><span lang=UK>Список джерел інформації</span><span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>25</span></a></p>

<p class=MsoNormal>&nbsp;</p>

<p class=1 align=left style='text-align:left'><i><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></i></p>

<b><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span></b>

<p class=1 align=left style='text-align:left'><b><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></b></p>

<p class=1 align=left style='text-align:left'><b><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></b></p>

<h1><a name="_Toc90012226"></a><a name="_Toc90012248"></a><a name="_Toc90012301"><span
lang=UK>Вступ</span></a><span lang=UK> </span></h1>

<p class=1 style='text-align:justify'><a name="_Hlk64238528"><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'> Моя
випускна робота являє собою рішення задачі. Умов її такі:</span></a></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Є
місцевість, яку має перетнути медична служба. Ця місцевість радіоактивно
заражена. Треба визначити на ній такий шлях, на якому одержана доза радіації
буде мінімальною.<br>
Місцевість має форму прямокутника. Радіорозвідка для зручності розбила її на
однакові квадрати. У межах кожного з них рівень радіації вважається однаковим.
Задана швидкість пересування по місцевості автомобіля з медиками. Доза,
одержана на ділянці шляху – це добуток рівня радіації на ньому, помножений на
час, протягом якого пройдено дану ділянку. Автомобіль може рухатися в різних
напрямках. Заборонено двічі відвідувати одну й ту ж ділянку. </span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Але
в цій задачі є уосконалення:</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><a name="_Hlk87361853"><span
lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>На
ділянці в випадковому порядку створюються певні квадрати. Вони такі ж за
розмірами, як і всі інші квадрати на які розбили всю ділянку. Ці квадрати також
можна перетнути, але на них радіація значно вище ніж на інших і її рівень
змінюється з часом. </span></a></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>В
епоху техногенних катастроф дана тема являється найбільш актуальною, так як в
наш час дуже часто </span><span lang=UK style='font-size:14.0pt;line-height:
107%;font-family:"Times New Roman",serif'>трапляються </span><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>неминучі
фатальні ситуації, де кожна секунда на рахунку життя, і не завжди допомога
приходить вчасно.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>У
даній роботі розглянуті методи рішення задачі для пошуку оптимального шляху,
для цього був використаний &quot;Алгоритм Дейкстри&quot;, але </span><span
lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>дещо
модифікований і він має назву «А*»</span><span lang=RU style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'>. Під час вирішення
основної задачі було вирішено супровідну типову задачу на повний перебір під
назвою «Світлофор». У ньому були використані методи за якими у моєму основному
проекті будуть застосовани для доповнення.</span></p>

<p class=MsoNormal style='margin-bottom:6.0pt;text-align:justify;text-indent:
1.0cm;line-height:14.65pt;background:white'><span lang=RU style='font-size:
14.0pt;font-family:"Times New Roman",serif;color:black'>    </span><span
lang=RU style='font-size:14.0pt;font-family:"Times New Roman",serif;color:black'>Мета
роботи: створити програму, яка визначає маршрут, на якому доза радіації
мінімальна.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Для
реалізації мети були поставлені такі завдання:</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>1.
проаналізувати науково-методичну літературу в області методів вирішення завдань
для пошуку найкоротшого шляху метою вибору найбільш ефективних і дієвих.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>2.
Проаналізувати необходні алгоритми для вирішення цих задач.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>3.
</span><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Вирішення
задачі «Світлофор», </span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>3.
Написати необхідний код і візуалізувати рішення задачі.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>4.
Підготувати супровідну документацію.</span></p>

<span lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif;
color:black'>&nbsp;</span></p>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Toc90012227"></a><a
name="_Toc90012249"></a><a name="_Toc90012302"><span lang=RU>Теоретична частина</span></a></h1>

<p class=MsoNormal style='margin-bottom:13.0pt;text-align:justify;text-indent:
1.0cm;line-height:normal'><b><i><span lang=RU style='font-size:16.0pt;
font-family:"Times New Roman",serif'>Перебір і методи його скорочення</span></i></b></p>

<p style='margin-top:7.5pt;margin-right:0cm;margin-bottom:7.5pt;margin-left:
0cm;text-align:justify;text-indent:1.0cm;background:white'><img width=308
height=28 src="Документация.files/image001.png" align=left hspace=12
alt="Рисунок 1 Приклад повного перебіру"><img width=308 height=355
src="Документация.files/image002.png" align=left hspace=12><span lang=RU
style='font-size:14.0pt;font-family:"Arial",sans-serif;color:black'>У багатьох
прикладних задачах потрібно знайти оптимальне рішення серед дуже великого (але
кінцевого) числа варіантів. Іноді вдається побудувати це рішення відразу, але в
більшості випадків єдиний спосіб його відшукати полягає в переборі </span><span
lang=UK style='font-size:14.0pt;font-family:"Arial",sans-serif;color:black'>всіх</span><span
lang=UK style='font-size:14.0pt;font-family:"Arial",sans-serif;color:black'> </span><span
lang=RU style='font-size:14.0pt;font-family:"Arial",sans-serif;color:black'>можливих
варіантів і порівнянні їх між собою. Тому так важливо навчитися будувати
алгоритми перебору різних комбінаторних об'єктів - послідовностей,
перестановок, підмножин і т.д.</span></p>

<p style='margin-top:7.5pt;margin-right:0cm;margin-bottom:7.5pt;margin-left:
0cm;text-align:justify;text-indent:1.0cm;background:white'><span lang=RU
style='font-size:14.0pt;color:black'>Зазвичай коли необхідно розглянути способи
скорочення перебору, часто розбирають завдання розстановки 8 ферзів на
шахівниці. Оскільки це завдання більше 200 років тому вирішив ще Леонард Ейлер,
то навряд чи зараз є, хоч якась можливість помилитися, при описі вирішення цієї
проблеми. Але в зв'язку з тим, що технічний прогрес не стоїть на місці і прямий
перебір 40320 (= 8!) Варіантів, а саме стільки варіантів розстановки ферзів
треба розглянути, щоб вирішити задачу, не є чимось незвичайним і здійснюється,
навіть не на найсучаснішому комп'ютері, менше ніж за хвилину, то і скорочення такого
перебору прямо скажемо не дуже вражає, але як приклад варто розглядати.</span></p>

<p style='margin-top:7.5pt;margin-right:0cm;margin-bottom:7.5pt;margin-left:
0cm;text-align:justify;text-indent:1.0cm;background:white'><span lang=RU
style='font-size:14.0pt;color:black'>Приклад: «Завдання про розстановку
ферзів». На шаховій дошці N * N потрібно розставити N ферзів таким чином, щоб
жоден ферзь не атакувати іншого. Відзначимо наступне. Всі можливі способи
розстановки ферзів - З ^ 2 (близько 4,4 * 109 для N = 8). Кожен стовпець
містить щонайбільше одного ферзя, що дає тільки NN розстановок (1,7 * 107 для
iV = 8). Ніякі два ферзя не можна поставити в один рядок, а тому, для того щоб
вектор (at, a2, ..., aN) був рішенням, він повинен бути перестановкою елементів
(1,2, ..., N), що дає тільки N \ (4,0 * 104 для N == 8) можливостей. Ніякі два
ферзя не можуть перебувати на одній діагоналі, це скорочує число можливостей ще
більше (для 2V = 8 в дереві залишається 2056 вузлів). Отже, за допомогою ряду
спостережень ми виключили з розгляду велике число можливих розстановок N ферзів
на дошці розміром N * N. Використання подібного аналізу для скорочення процесу
перебору називається пошуком з обмеженнями або відсіканням гілок в зв'язку з
тим, що при цьому видаляються піддерева з дерева. Друге. Іншим удосконаленням є
злиття, або склеювання, гілок. Ідея полягає в тому, щоб уникнути виконання
двічі однієї і тієї ж роботи: якщо два або більше піддерев даного дерева
ізоморфні, ми хочемо досліджувати лише одна з них. У задачі про ферзів ми
можемо використовувати склеювання, помітивши, що якщо af ^ N / 2], то знайдене
рішення можна відобразити і отримати рішення, для якого a ^ N / 2]. Отже,
дерева, відповідні, наприклад, випадків А1-2 та UJ ^ -N-1, ізоморфні.</span></p>

<p class=1 style='text-align:justify'><span lang=UK style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'>В задачах лінійного та
нелінійного програмування керований</span><span lang=UK style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'> </span><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>процес,
відносно якого приймається рішення, вважається статичним, тобто незалежним від
часу, тому оптимальне рішення (керування) знаходиться лише на один етап
планування. Такі задачі називаються одноетапними або однокроковими. В задачах
динамічного програмування керований процес залежить від часу, тому знаходиться
ряд рішень (для кожного етапу), що забезпечують оптимальний розвиток всього
процесу в цілому. Задачі динамічного програмування називаються багатоетапними
або багатокроковими. Динамічне програмування являє собою математичний апарат,
що дозволяє реалізувати оптимальне керування багатокроковими процесами
прийняття рішень. Зауважимо, що досить часто шляхом певного перефразування і
деякі статичні задачі можуть бути зведені до багатоетапних.</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm;
page-break-after:avoid'><span lang=UK style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'><img width=452 height=774 id="Рисунок 2"
src="Документация.files/image003.jpg"></span></p>

<p class=MsoCaption style='text-align:justify;text-indent:1.0cm'><span lang=RU>Рисунок
</span><span lang=RU>2</span><span lang=UK>Приклад  вирішення задачі на
динамічне програмування за допомогою блок-схеми</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:16.0pt;line-height:107%;font-family:Symbol'>·</span><b><span
lang=RU style='font-size:16.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
Дейкстри.</span></b></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
Дейкстри (також званий пошуком з рівномірною вартістю) дозволяє нам ставити
пріоритети дослідження шляхів. Замість рівномірного дослідження всіх можливих
шляхів він віддає перевагу шляхах з низькою вартістю.</span><span lang=RU> </span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><img width=279
height=119 src="Документация.files/image004.jpg" align=left hspace=12
alt="python - Проверить, возможен ли ориентированный ациклический граф -  Question-It.com"><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
голландського вченого Едсгер Дейкстри знаходить все найкоротші шляхи з однієї
наперед заданій вершини графа до всіх інших.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><img width=279
height=28 src="Документация.files/image005.png" align=left hspace=12
alt="Рисунок 3 Граф"><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Мінусом даного методу є неможливість
обробки графів, в яких є ребра з негативним вагою. Якщо, наприклад, деяка
система передбачає збиткові для Вашої фірми маршрути, то для роботи з нею варто
скористатися відмінним від алгоритму Дейкстри методом.</span><span lang=RU> </span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Для
програмної реалізації алгоритму знадобитися два масиви: логічний <b>visited</b>
- для зберігання інформації про відвідані вершинах і чисельний </span><b><span
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>path</span></b><b><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>_</span></b><b><span
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>lenght</span></b><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>,
в який будуть заноситися знайдені найкоротші шляхи. Отже, є граф </span><b><span
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>matrix</span></b><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
= (V, E). Кожна з вершин входять в безліч V, спочатку відзначена що не
відвідана, т. Е. Елементам масиву visited присвоєно значення false.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Оскільки
найвигідніші шляхи тільки належить знайти, в кожен елемент вектора distance
записується таке число, яке свідомо більше будь-якого потенційного шляху
(зазвичай це число називають нескінченністю, але в програмі використовують,
наприклад максимальне значення конкретного типу даних). В якості вихідного
пункту вибирається вершина s</span><span style='font-size:14.0pt;line-height:
107%;font-family:"Times New Roman",serif'>tart</span><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
і йому приписується нульовий шлях: </span><span style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'>path</span><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>_</span><span
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>lenght</span><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
[s</span><span style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>tart</span><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>]
= 0, оскільки </span><span lang=UK style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>н</span><span lang=RU style='font-size:
14.0pt;line-height:107%;font-family:"Times New Roman",serif'>емає ребра з s</span><span
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>tart</span><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
в s</span><span style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>tart</span><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
Дейкстри будує найкоротші шляхи, що ведуть з вихідної вершини графа до решти
вершин цього графа (якщо такі є).</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>У
процесі роботи алгоритму послідовно позначаються розглянуті вершини графа.
Причому вершина, позначена останньої (на даний момент) розташована ближче до
вихідної вершині, ніж всі непомічені, але далі, ніж всі помічені.Спочатку
позначається вихідна вершина; Наступного, очевидно, буде позначена вершина,
найближча до вихідної, і суміжна з нею.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Нехай
на якомусь етапі вже позначено кілька вершин. Відомі найкоротші шляхи, що
ведуть з вихідної вершини до поміченим. Для кожної з непомічених вершин
проробимо наступне: </span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>1.</span><span
lang=RU> </span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Розглянемо всі дуги, провідні з помічених
вершин в одну непоміченими. Кожна така дуга є останньою дугою на шляху з
вихідної вершини в цю непоміченими.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>2.
Виберемо з цих шляхів найкоротший. А потім виберемо серед них самий короткий до
всіх непомічених вершин, і позначимо вершину, до якої він веде.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
завершиться, коли будуть помічені всі досяжні вершини.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>В
результаті роботи алгоритму Дейкстри будується Дерево найкоротших шляхів.</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:16.0pt;line-height:107%;font-family:Symbol'>·</span><b><span
lang=RU style='font-size:16.0pt;line-height:107%;font-family:"Times New Roman",serif'>Жадібний
алгоритм(пошук)</span></b></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Є
багато методів вирішення тих чи інших завдань: динамічне програмування,
перебір. Не менш відомими та досить поширеними є жадібні алгоритми.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Джудеа
Перл  описав пошук «Найкращий — перший», взявши як оцінку вузла n значення
деякої «евристичної функції оцінки f(n), яка, взагалі кажучи, може залежати від
опису вузла n, опису мети, інформації, яка зібрана пошуком на даний момент, і
головне, від будь-яких додаткових знань про предметну галузь».</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Деякі
автори використовували пошук «Найкращий — перший» спеціально для опису пошуку з
евристикою, щоб спробувати передбачити, наскільки близько знаходимося до
фінального стану, так що шляхи, які мають найкращу евристичну оцінку,
розглядаються першими. Цей специфічний тип пошуку називається «жадібним пошуком».</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Простими
словами, жадібний алгоритм - це алгоритм, який на кожному кроці робить локально
найкращий вибір, сподіваючись, що підсумкове рішення буде оптимальним.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Наприклад,
алгоритм Дейкстри знаходження найкоротшого шляху у графі цілком собі жадібний,
тому що ми щокроку шукаємо вершину з найменшою вагою, у якій ми ще бували,
після чого оновлюємо значення інших вершин.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Жа&#769;дібний
алгори&#769;тм — простий і прямолінійний евристичний алгоритм, який приймає
найкраще рішення, виходячи з наявних на кожному етапі даних, не зважаючи на
можливі наслідки, сподіваючись урешті-решт отримати оптимальний розв'язок.
Легкий в реалізації і часто дуже ефективний за часом виконання. Багато задач не
можуть бути розв'язані за його допомогою.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Зазвичай,
жадібний алгоритм базується на п'яти принципах:</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Набір можливих варіантів, з яких робиться
вибір;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Функція вибору, за допомогою якої
знаходиться найкращий варіант, який буде додано до розв'язку;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Функція придатності, яка визначає
придатність отриманого набору;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Функція цілі, передає значення розв'язку
або частковому розв'язку;</span></p>

<p class=1 style='margin-left:36.0pt;text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Функція розв'язку, яка вказує на те, що
кінцевий розв'язок знайдено.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Придатний
набір варіантів — такий, що обіцяє не просто отримання розв'язку, а отримання
оптимального розв'язку задачі.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>На
відміну від динамічного програмування, за якого задача розв'язується знизу
догори, за жадібної стратегії це робиться згори донизу, шляхом здійснення одного
жадібного вибору за іншим, зведенням великої задачі до малої.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Жадібний
алгоритм добре розв'язує деякі задачі, а інші — ні. </span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Принцип
жадібного вибору:</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>До
оптимізаційної задачі можна застосувати принцип жадібного вибору, якщо
послідовність локально оптимальних виборів дає глобально оптимальний розв'язок.
В типовому випадку доведення оптимальності здійснюється за такою схемою:
спочатку доводиться, що жадібний вибір на першому етапі не унеможливлює шляху
до оптимального розв'язку: для будь-якого розв'язку є інший, узгоджений із
жадібним і не гірший від першого. Далі доводиться, що підзадача, яка виникла
після жадібного вибору на першому етапі, аналогічна початковій, і міркування
закінчується за індукцією. Інакше кажучи, за жадібного алгоритму ніколи не переглядаються
попередні вибори для здійснення наступного, на відміну від динамічного
програмування.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><b><span lang=RU
style='font-size:16.0pt;line-height:107%;font-family:"Times New Roman",serif'>А*</span></b></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
пошуку А*  належить до евристичних алгоритмів пошуку. Використовується для
пошуку найкоротшого шляху між двома вершинами графу з додатніми вагами ребер.
Описаний 1968 р. Пітером Хартом, Нільсом Нільсоном та Бертрамом Рафаелєм.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
використовує допоміжну функцію (евристику), аби скеровувати напрям пошуку та
скорочувати його тривалість. Алгоритм повний в тому сенсі, що завжди знаходить
оптимальний розв'язок, якщо він існує.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
A * також оптимально ефективний для заданої евристики h.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Це
означає, що будь-який інший алгоритм досліджує не менш вузлів, ніж A* (За
винятком випадків, коли існує кілька приватних рішень з однаковою евристикою,
точно відповідної вартості оптимального шляху).</span><span lang=RU> </span><span
lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
пошуку шляху з пункту А в пункт Б.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>У
той час як алгоритм </span><span lang=RU style='font-size:14.0pt;line-height:
107%;font-family:"Times New Roman",serif'>A</span><span lang=UK
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>*
оптимальний для «випадково» заданих графів, немає гарантії, що він зробить свою
роботу краще, ніж більш прості, але і більш інформовані щодо проблемної області
алгоритми. </span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Наприклад, в якомусь лабіринті може
знадобитися спочатку йти у напрямку від виходу і тільки потім повернути назад.
В цьому випадку обстеження спочатку тих вершин, які розташовані ближче до виходу
(по прямій дистанції), буде втратою часу.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Алгоритм
Дейкстри хороший в пошуку найкоротшого шляху, але він витрачає час на
дослідження всіх напрямків, навіть безперспективних. Жадібний пошук досліджує
перспективні напрямки, але може не знайти найкоротший шлях. Алгоритм A *
використовує і справжнє відстань від початку, і оцінене відстань до цілі. Код
дуже схожий на алгоритм Дейкстри.</span></p>

<b><span lang=RU style='font-size:24.0pt;font-family:"Times New Roman",serif'><br
clear=all style='page-break-before:always'>
</span></b>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Toc90012228"></a><a
name="_Toc90012250"></a><a name="_Toc90012303"><span lang=RU>Головна частина</span></a></h1>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><img width=311
height=36 src="Документация.files/image006.png" align=left hspace=12><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Для
вирішення даного завдання найвигідніше використовувати алгоритм А *, так як він
не виконує зайві перебори, як Алгоритм Дейкстри. А * це суміш кращих
характеристик 2 алгоритмів (Алгоритму Дейкстри і Жадібного пошуку). Для його
реалізації знадобилося у використанні деяких систем, такі як System.Linq і
System.Collections.ObjectModel. Ці </span><span lang=UK style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'>си</span><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>стеми
допомагає в роботі з колекціями, це і є головна відмітна риса від Алгоритму
Дейкстри (в А * робота зі списками, в алгоритм Дейкстри з масивами). Вони
являються більш зручними при роботі з з пошуком самого найкоротшого і найбільш
оптимального шляху.</span><span lang=RU> </span></p>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Для
того щоб його реалізувати в простір C # Windows Forms Applications, я вирішив
прочитати інформацію у деяких книгах і сайтах. Приведенний нижче код я використовував
для знаходження очікуваного шляху (в незваженому орієнтованому графі):</span></p>

<p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>По-перше,я створив клас точки, за
допомогою яких ми будемо знаходити сусідні точки.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=519 height=202 id="Рисунок 5" src="Документация.files/image007.png"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>По-друге, я створив 2 змінних, які будуть
показувати очікуване і реальну відстань до цілі(відстані між вершинами однакові).</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=488 height=65 id="Рисунок 17" src="Документация.files/image008.png"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Створюю список, в який я буду записувати знайдений
шлях, а також створюємо 2 колекції в які будемо записувати переглянуті і не
переглянуті (те ж саме в звичайному алгоритму Дейкстри, тільки з масивами).</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=588 height=112 id="Рисунок 8" src="Документация.files/image009.png"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'> Створюємо початкову точку, і говоримо що
відстань від неї дорівнює 0, так як ми ще не почали рухатися. Паралельно з цим
викликаємо метод GetHeuristicPathLength(Еврестичний метод), який знаходить
відстань між 2 точками, але цей метод не завжди знаходить найкоротший шлях,
тому ми записуємо його в distance_H (очікуваний шлях).</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=407 height=144 id="Рисунок 9" src="Документация.files/image010.png"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'> У колекцію &quot;переглянуті вершин</span><span
lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>и</span><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&quot;
додаємо початкову точку і ставимо її найпершою за допомогою методу OrderBy, так
як в даний момент ми на ній знаходимося. Також сосдаем умова, що якщо поточна
позиція це координата кінцевої точки, то шлях знайдений.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=281 height=160 id="Рисунок 10" src="Документация.files/image011.png"></p>

<p class=MsoListParagraphCxSpLast style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'> Переглядаю сусідні точки в колекції, і
створюю умова: якщо поточна позиція це сусідні координати, то скористаємося
методом FirstOrDefault, який вирощує перший елемент колекції. І записуємо
координати в окрему змінну. Продовжуємо переглядати колекцію. Створюємо умова,
що якщо точка, в яку ми записали координати 1 відвідується вершини, не
перебувати в колекції &quot;переглянуті вершин&quot;, то ми її туди додаємо, а
інакше ми перевіряємо, чи рухаємося ми до мети найкоротшим шляхом, якщо немає,
то ми записуємо шлях який пройшли, як найкоротший шлях.</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><img width=473
height=157 id="Рисунок 12" src="Документация.files/image012.png"></p>

<p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Додаємо функцію відстані між сусідніми
точками і заповнюємо її значення. Також додаємо функцію приблизної оцінки </span><img
width=438 height=256 id="Рисунок 11" src="Документация.files/image013.jpg"><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>відстані
до цілі.</span><span lang=RU> </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'> Утворюємо колекцію в якій знаходиться
сусідні точки. Записуємо у колекцію які точки можуть бути сусідніми.</span><span
lang=RU> </span><img width=624 height=190 id="Рисунок 13"
src="Документация.files/image014.jpg"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'> Перевіряємо щоб ці точки не виходили за
межу. Перевіряємо, щоб можна було переходити з однієї вершини на іншу.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=559 height=271 id="Рисунок 14" src="Документация.files/image015.png"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'> Створюємо нову змінну, і заповнюємо туди
дані маршруту, який був побудований.</span><span lang=UK style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'>Повертаємо дані.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=568 height=179 id="Рисунок 15" src="Документация.files/image016.png"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'> Створюємо новий список, в який заповнюємо
координати виконаного маршруту і повертаємо його.</span><span lang=RU> </span><img
width=403 height=220 id="Рисунок 16" src="Документация.files/image017.png"></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>12.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>На самому початку проекту створюємо
список, в який заповнюємо 2 координати (початкова та кінцева).</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:64.35pt;text-align:justify'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Також
я використав інший алгоритм Дейкстри, наведений нижче:</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify;
text-indent:-18.0pt'><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Створюємо декілька класів для заповнення
координат(назви) вершин, дуги та їх вагу,</span><span lang=RU> </span><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>відвідані/невідвідані
вершини.</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify'><img
width=462 height=390 id="Рисунок 21" src="Документация.files/image018.png"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify'><img
width=400 height=158 id="Рисунок 23" src="Документация.files/image019.png"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:64.35pt;text-align:justify'><img
width=384 height=344 id="Рисунок 24" src="Документация.files/image020.png"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify;
text-indent:-18.0pt'><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><img width=551 height=441 src="Документация.files/image021.png"
align=left hspace=12
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"><img
width=497 height=235 id="Рисунок 27" src="Документация.files/image022.png"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"> <span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Після
отримання інформації про найближчі вершини, створюється їх список і
викликається клас Algoritm, де в методі FindShort</span><span style='font-size:
14.0pt;line-height:107%;font-family:"Times New Roman",serif'>est</span><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Path
знаходяться найкоротші вершини шляхом порівняння ваги цих вершин.</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify;
text-indent:-18.0pt'><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Обчислення суми ваг ребер для наступної
вершини, де info - інформація про поточну вершину</span><img width=624
height=301 id="Рисунок 26" src="Документация.files/image023.jpg"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>.</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:1.0cm'><img
width=624 height=149 id="Рисунок 19" src="Документация.files/image024.png"></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify;
text-indent:-18.0pt'><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Знаходження шляху та повернення отриманого
результату (цикл триватиме, доки знайде потрібний шлях чи поверне значення
null, якщо такого немає).</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:82.35pt;text-align:justify'><img
width=481 height=187 id="Рисунок 28" src="Документация.files/image025.png"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"></p>

<p class=MsoListParagraphCxSpLast style='margin-left:82.35pt;text-align:justify;
text-indent:-18.0pt'><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>Порівнюємо результати отримані з
використанням евристики та використанням Алгоритму Дейкстри.</span></p>

<p class=MsoNormal style='margin-left:64.35pt;text-align:justify'><img
width=593 height=346 id="Рисунок 29" src="Документация.files/image026.jpg"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"></p>

<p class=MsoNormal style='text-align:justify'><span lang=RU style='font-size:
14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpFirst style='margin-left:64.35pt;text-align:justify'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>6.</span></p>

<p class=MsoListParagraphCxSpLast style='margin-left:64.35pt;text-align:justify'><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Підраховуємо
скільки разів ми робили кроки, щоб обчислити пройдений шлях, після чого знаходимо
час шляху і множимо його на рівень радіації, щоб вивести в listbox отриману
дозу на цьому шляху.</span><span lang=RU> </span><img width=583 height=97
id="Рисунок 30" src="Документация.files/image027.png"
alt="Зображення, що містить текст&#10;&#10;Автоматично згенерований опис"></p>

<span lang=RU style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><span lang=RU>&nbsp;</span></p>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Toc90012229"></a><a
name="_Toc90012251"></a><a name="_Toc90012304"><span lang=RU>Крупноблочна
блок-схема</span></a></h1>

<p class=MsoBodyText style='margin-left:0cm;text-indent:1.0cm'><span lang=RU>Все,
що було описано вище показано на блок-схемі:</span></p>

<p class=MsoBodyText style='text-indent:1.0cm;page-break-after:avoid'><span
lang=RU><img width=624 height=782 id="Рисунок 20"
src="Документация.files/image028.png"></span></p>

<p class=MsoCaption style='text-align:justify;text-indent:1.0cm'><span lang=RU>Рисунок
</span><span lang=RU>4</span><span lang=UK>Блок-Схема вирішення задачі за допомогою
алгоритма А*</span></p>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<span lang=RU style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>&nbsp;</span></p>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Toc90012230"></a><a
name="_Toc90012252"></a><a name="_Toc90012305"><span style='color:black'>Програмно-апаратні
вимоги</span></a></h1>

<p class=MsoListParagraphCxSpFirst style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=UK>Процесор частотою 1.5 </span>GHz <span lang=UK>або
вище</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=UK>4096 </span>MB RAM</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=RU>100 </span>MB <span lang=UK>вільного місця на
жорсткому диску</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=UK>Роздільна здатність монітору 1440 х 900 або вище</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt'><span lang=UK>Підтримування
операційні системи</span>: </p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Windows 8(64 <span lang=UK>біт</span>)</p>

<p class=MsoListParagraphCxSpLast style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Windows 10(<span lang=UK>64 біт</span>)</p>

<span lang=UK style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal><span lang=UK>&nbsp;</span></p>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Toc90012231"></a><a
name="_Toc90012253"></a><a name="_Toc90012306"><span lang=UK>Перелік
використаних програмних проектів</span></a></h1>

<p class=MsoBodyText style='text-indent:1.0cm'><span lang=UK>У цьому проекті, я
використав </span><span lang=RU>Visual</span><span lang=RU> </span><span
lang=RU>Studio</span><span lang=UK> 2017 і </span><span lang=RU>Microsoft</span><span
lang=RU> </span><span lang=RU>Word</span><span lang=UK> 2016 (для написання
супровідної документації). </span><span lang=RU>Мова програмування використаний
для написання даної програми - С # .NET Core 4.7.2</span><span lang=UK>.</span></p>

<p class=MsoBodyText style='text-indent:1.0cm'><span lang=UK>&nbsp;</span></p>

<p class=MsoListParagraphCxSpFirst style='margin-left:72.0pt'><span lang=UK>Використані
програми</span>: </p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:90.0pt;text-indent:-18.0pt'><span
lang=UK>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Visual Studio 2017</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:90.0pt;text-indent:-18.0pt'><span
lang=UK>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Microsoft Word 2016</p>

<p class=MsoListParagraphCxSpLast style='margin-left:90.0pt;text-indent:-18.0pt'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Adobe
Photoshop 2016</p>

<br clear=all style='page-break-before:always'>

<p class=MsoNormal>&nbsp;</p>

<h1 style='text-align:justify'><a name="_Toc90012232"></a><a name="_Toc90012254"></a><a
name="_Toc90012307"><span lang=RU>Посібник користувача</span></a></h1>

<p class=1 style='text-align:justify;text-indent:1.0cm'><b><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Граф</span></b><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
являє собою кінцеву сукупність об'єктів, які з'єднуються між собою зв'язками.
Об'єктами, з яких складається граф, є вершини, а зв'язку представлені у вигляді
ребер.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><b><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Вершина</span></b><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
є точкою, в якій можуть сходитися чи з якої можуть виходити ребра.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><b><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Ребро</span></b><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
є лінією, яка з'єднує пару суміжних вершин графа.</span></p>

<p class=1 style='text-align:justify'><span lang=RU style='font-size:14.0pt;
line-height:107%;font-family:"Times New Roman",serif'>Якщо вершини графа
з'єднані ребром, то вони називаються суміжними, в іншому випадку - несуміжні.</span></p>

<p class=1 style='text-align:justify;text-indent:1.0cm'><b><span lang=RU
style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>Евристика</span></b><span
lang=RU style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'>
 </span><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:
"Times New Roman",serif;color:#202122;background:white'>— термін стосується
способу вибору цілі або напрямку в розв'язуванні задачі, правильність якого на
кожному кроці невідома або не може бути підтверджена. Такі методи як генетичний
алгоритм або нейронна сітка використовують для приймання рішень евристичні способи,
які можуть ґрунтуватися на суто емпіричній інформації, що не піддається суворій
раціоналізації.</span></p>

<b><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif'><br
clear=all style='page-break-before:always'>
</span></b>

<p class=MsoNormal style='text-align:justify;text-indent:1.0cm'><b><span
lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Times New Roman",serif;
color:black'>&nbsp;</span></b></p>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Toc90012233"></a><a
name="_Toc90012255"></a><a name="_Toc90012308"><span lang=UK>Висновки</span></a></h1>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Hlk90012636"></a><a
name="_Toc90012234"></a><a name="_Toc90012256"></a><a name="_Toc90012309"><span
lang=UK style='font-size:14.0pt;font-weight:normal'>Підбиваючи підсумки даної
роботи,</span></a><span lang=UK> </span><span lang=UK style='font-size:14.0pt;
font-weight:normal'>поставлене завдання було вирішено. Але я зіткнувся з
багатьма проблемами, в тому числі і з тим, що даний алгоритм не є найкращим у
пошуку найкоротшого шляху, оскільки сам по собі алгоритм Дейкстри є жадібним
(тобто він шукає найкоротший шлях між двома сусідніми вершинами у матриці
суміжності). Локально він знаходить правильні шляхи, але в деяких випадках цей
шлях не є оптимальним, тому що він може робити зайві кроки. Хорошою заміною
даного алгоритму є алгоритм Флойда-Уоршелла, але він також має свої недоліки:
оскільки він шукає відстань між усіма вершинами, то йому потрібний складний
алгоритм з використанням 5 і більше вкладених циклів з обмежуючими умовами на
сусідні точки (ми не можемо перейти з початкової точки відразу в кінцеву), були
проведені тести і при запуску програми вона могла вантажитися близько 15 хвилин
для показу шляху матриці 10Х10. Хоча алгоритм Дейкстри робить це за кілька
секунд. Кожен з алгоритмів має свої недоліки та переваги, але все ж таки вони є
зручним інструментом для вирішення багатьох завдань, які необхідні для моделювання
реальних ситуацій.</span></h1>

<b><span lang=UK style='font-size:14.0pt;line-height:107%;font-family:"Calibri",sans-serif'><br
clear=all style='page-break-before:always'>
</span></b>

<p class=MsoNormal><span lang=UK style='font-size:14.0pt;line-height:107%;
font-family:"Times New Roman",serif'>&nbsp;</span></p>

<h1 style='text-align:justify;text-indent:1.0cm'><span lang=UK
style='font-size:14.0pt;font-weight:normal'>&nbsp;</span></h1>

<h1 style='text-align:justify;text-indent:1.0cm'><a name="_Toc90012235"></a><a
name="_Toc90012257"></a><a name="_Toc90012310"><span lang=UK>Список джерел
інформації</span></a></h1>

<p class=MsoBodyText style='margin-left:36.0pt;text-indent:1.0cm'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>
</span></span><span lang=RU>«ЗБІРКА НАУКОВИХ ПРАЦЬ НГТУ»</span>: </p>

<p class=MsoBodyText style='text-indent:1.0cm'><span lang=RU><a
href="https://viduus.net/wp-content/uploads/2018/02/Rihter-Dzh.-CLR-via-C.-Programmirovanie-na-platforme-Microsoft-.NET-Framework-4.5-na-yazyke-C-Master-klass-2013.pdf"><span
lang=UK>https://viduus.net/wp-content/uploads/2018/02/Rihter-Dzh.-CLR-via-C.-Programmirovanie-na-platforme-Microsoft-.NET-Framework-4.5-na-yazyke-C-Master-klass-2013.pdf</span></a></span></p>

<p class=MsoBodyText style='text-indent:1.0cm'><span lang=RU><a
href="file:///C:/Users/1/Downloads/sbornik_2_88_13824.pdf"><span lang=UK>file:///C:/Users/1/Downloads/sbornik_2_88_13824.pdf</span></a></span></p>

<p class=MsoBodyText style='margin-left:36.0pt;text-indent:1.0cm'><span
lang=UK style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>
</span></span><span lang=UK>Сайт для пояснення, що таке А*</span><span lang=RU>:
<a href="https://habr.com/ru/post/444828/"><span lang=UK>https://habr.com/ru/post/444828/</span></a></span></p>

<p class=MsoBodyText style='margin-left:36.0pt;text-indent:1.0cm'><span
lang=RU style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>
</span></span><span lang=UK>Книга «</span><span lang=RU>Программирование в
алгоритмах</span><span lang=UK>»</span>:</p>

<p class=MsoBodyText style='text-indent:1.0cm'><span lang=RU><a
href="https://algo.at.ua/_ld/0/3_....pdf"><span lang=UK>https://algo.at.ua/_ld/0/3_....pdf</span></a></span></p>

<p class=MsoBodyText style='margin-left:69.45pt;text-indent:0cm'><span lang=UK>&nbsp;</span></p>

</div>

</body>

</html>
